---
import Nav from '../components/nav.astro';
import Footer from '../components/footer.astro';
import '../styles/global.css';
---

<html id="html" lang="en" class="dark">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>Astro</title>
  </head>
  <body>
	<div class="bg-gradient-to-t from-blue-400 to-blue-100 dark:from-black dark:via-gray-800 dark:to-slate-900">
    <div class="h-[50px] sticky top-0">
      <Nav />
      <div id="day_button" class="text-white bg-gray-800 w-[32px] rounded p-1 cursor-pointer absolute right-2 top-3">
        <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <circle cx="12" cy="12" r="5" stroke-width="2"/>
          <path stroke-width="2" d="M12 1v2m0 18v2m11-11h-2M3 12H1m16.95-6.95l-1.414 1.414M6.464 17.536l-1.414 1.414m0-13.657l1.414 1.414M18.364 18.364l1.414 1.414"/>
        </svg>
      </div>
      <div id="night_button" class="bg-blue-500 w-[32px] rounded p-1 cursor-pointer absolute right-2 top-3 hidden">
        <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
          <path d="M21 12.79A9 9 0 1111.21 3a7 7 0 109.79 9.79z"/>
        </svg>
      </div>
    </div>
    <div id="hero_animation" class="flex h-[calc(100vh-100px)] w-full items-center justify-center sticky top-13 transition-opacity duration-200 opacity-100">
      <div class="flex flex-wrap justify-center items-center">
        <div class="bg-gray-600 rounded-full m-5">
          <img class="h-[200px] w-[200px] p-2 rounded-full" src="/profile-website/GithubProfile.png" alt="Github Profile Image">
        </div>
        <ul id="summary_list" class="list-disc pl-5 text-lg m-5">
          <li id="dev" class="opacity-0 translate-x-10 transition-all delay-100 duration-1000 dark:text-gray-200">Software Developer</li>
          <li id="one" class="opacity-0 translate-x-10 transition-all delay-300 duration-1000 dark:text-gray-200">Fullstack Experience</li>
          <li id="two" class="opacity-0 translate-x-10 transition-all delay-200 duration-1000 dark:text-gray-200">Flutter/Dart</li>
          <li id="three" class="opacity-0 translate-x-10 transition-all delay-400 duration-1000 dark:text-gray-200">PostgreSQL</li>
        </ul>
      </div>
    </div>
    <div class="flex h-[calc(100vh-50px)] w-full items-center justify-center">
      <div class="flex flex-wrap justify-center items-center dark:text-gray-200">
        Text
      </div>
    </div>
    <Footer />
  </div>
  </body>
  <script>
    function switchTheme(isDay: boolean) {
      const html = document.getElementById("html");
      const night = document.getElementById("night_button");
      const day = document.getElementById("day_button");

      if (isDay) {
        html?.classList.add('dark');
        night?.classList.add('hidden');
        day?.classList.remove('hidden');
      } else {
        html?.classList.remove('dark');
        night?.classList.remove('hidden');
        day?.classList.add('hidden');
      }
    }
    document.getElementById("night_button")?.addEventListener("click", () => switchTheme(true));
    document.getElementById("day_button")?.addEventListener("click", () => switchTheme(false));

    window.addEventListener("DOMContentLoaded", () => {
      const devContent = document.getElementById("dev");
      devContent?.classList.remove('opacity-0', 'translate-x-10');
      devContent?.classList.add('opacity-100', 'translate-x-0');

      const firstContent = document.getElementById("one");
      firstContent?.classList.remove('opacity-0', 'translate-x-10');
      firstContent?.classList.add('opacity-100', 'translate-x-0');

      const secondContent = document.getElementById("two");
      secondContent?.classList.remove('opacity-0', 'translate-x-10');
      secondContent?.classList.add('opacity-100', 'translate-x-0');

      const thirdContent = document.getElementById("three");
      thirdContent?.classList.remove('opacity-0', 'translate-x-10');
      thirdContent?.classList.add('opacity-100', 'translate-x-0');

    });

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(e => {
        if (e.isIntersecting) {
          e.target.classList.remove('opacity-0', 'translate-y-10')
          e.target.classList.add("opacity-100", 'translate-y-0');
        }
      });
    }, { threshold: 0.2 });

    document.querySelectorAll('[data-animate]').forEach(el => observer.observe(el));

    const hero = document.getElementById("hero_animation");

    window.addEventListener('scroll', () => {
      const progress = window.scrollY / window.innerHeight;

      hero?.classList.remove('opacity-100', 'opacity-80', 'opacity-60', 'opacity-40', 'opacity-20', 'opacity-0');

      if (progress < 0.15) hero?.classList.add('opacity-100');
      else if (progress < 0.3) hero?.classList.add('opacity-80');
      else if (progress < 0.45) hero?.classList.add('opacity-60');
      else if (progress < 0.6) hero?.classList.add('opacity-40');
      else if (progress < 0.75) hero?.classList.add('opacity-20');
      else hero?.classList.add('opacity-0');
    });
  </script>
</html>